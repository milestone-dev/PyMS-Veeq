
from ...GRP import image_bounds


def run(path_to):
	"""Image Bounds"""
	results = ''
	tests = (
		(
			'\\',
			(
				(0,0,0,0,0),
			 	(0,1,0,0,0),
				(0,0,1,0,0),
				(0,0,0,1,0),
				(0,0,0,0,0)
			),
			(1,1,4,4)
		),
		(
			'/',
			(
				(0,0,0,0,0),
				(0,0,0,1,0),
				(0,0,1,0,0),
			 	(0,1,0,0,0),
				(0,0,0,0,0)
			),
			(1,1,4,4)
		),
		(
			"X",
			(
				(0,0,0,0,0),
			 	(0,1,0,1,0),
				(0,0,1,0,0),
				(0,1,0,1,0),
				(0,0,0,0,0)
			),
			(1,1,4,4)
		),
		(
			"<>",
			(
				(0,0,0,0,0),
			 	(0,0,1,0,0),
				(0,1,0,1,0),
				(0,0,1,0,0),
				(0,0,0,0,0)
			),
			(1,1,4,4)
		),
		(
			"|",
			(
				(0,0,0,0,0),
			 	(0,0,1,0,0),
				(0,0,1,0,0),
				(0,0,1,0,0),
				(0,0,0,0,0)
			),
			(2,1,3,4)
		),
		(
			"-",
			(
				(0,0,0,0,0),
			 	(0,0,0,0,0),
				(0,1,1,1,0),
				(0,0,0,0,0),
				(0,0,0,0,0)
			),
			(1,2,4,3)
		),
		(
			".",
			(
				(0,0,0,0,0),
			 	(0,0,0,0,0),
				(0,0,1,0,0),
				(0,0,0,0,0),
				(0,0,0,0,0)
			),
			(2,2,3,3)
		),
		(
			"dots1",
			(
				(0,1,0,1,0),
			 	(1,0,1,0,1),
				(0,1,0,1,0),
				(1,0,1,0,1),
				(0,1,0,1,0)
			),
			(0,0,5,5)
		),
		(
			"dots2",
			(
			 	(1,0,1,0,1),
				(0,1,0,1,0),
				(1,0,1,0,1),
				(0,1,0,1,0),
				(1,0,1,0,1)
			),
			(0,0,5,5)
		)
	)
	for name,image,bounds in tests:
		result = tuple(image_bounds(image))
		if result != bounds:
			results += '%s: %s != %s\n' % (name,result,bounds)
	if results:
		return results[:-1]
	return True
